name: Publish Docker image

on:
  push:
    branches:
      - master
      - live-*
  pull_request:
    branches:
      - master

  create:
    tags:
      - v*

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      - name: Branch name
        run: |-
          tag_name=$(echo "${GITHUB_REF}" | sed 's/.*\///g; s/master/latest/')
          echo DOCKER_TAG_NAME=${tag_name}
          echo DOCKER_TAG_NAME=${tag_name} >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build & tag Docker image
        run:
          docker build . --tag ghcr.io/dcsaorg/dcsa-edoc-ui:${{ env.DOCKER_TAG_NAME }}

      - name: Build and  microservices
        run:  docker-compose up -d -V --build

      - name: Check UI Status
        run: |
          sleep 10
          status=$(curl -s -o /dev/null -I -w "%{http_code}" http://localhost/edoc/index.html)
          retries=12

          while [[ "$status" != "200" ]] && [[ $retries -gt 0 ]]; do
            echo "Status is '$status' - waiting 5 secs ($retries retries left)"
            sleep 5
            retries=$((retries - 1))
            status=$(curl -s -o /dev/null -I -w "%{http_code}" http://localhost/edoc/index.html)
          done

          echo "Final status is '$status'"
          if [[ "$status" != "200" ]]; then
            curl -v http://localhost/edoc/index.html || :
            docker ps || :
            docker logs dcsa-edocumentation-ui-dcsa-ebl-ui-1 || :
            exit 1
          fi

          echo "::set-output name=STATUS::$status"
        id: healthcheck    
          

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: print
        run: |
          echo "labels > ${{ steps.meta.outputs.labels }}"
          echo "tags > ${{ steps.meta.outputs.tags }}"

      - name: push
        run: docker push ghcr.io/dcsaorg/dcsa-edoc-ui:${{ env.DOCKER_TAG_NAME }}
