/**
 * DCSA OpenAPI specification for Booking v2 - Beta 1
 * API specification issued by DCSA.org.  For explanation to specific values or objects please refer to the *** [Information Model v2022.1]() *** Will be updated soon ***. This API does not define the business rules regarding what is allowed to update at what time. For this the [BKG IFS]() *** Will be updated soon *** should be consulted.  All other documents related to the Booking publication can be found [here](https://knowledge.dcsa.org/s/publication?publicationId=a0r7T000000L8mmQAC)  It is possible to use this API as a standalone API. In order to do so it is necessary to use the poll-endPoint - /v2/events  in order to poll event information.  It is recomended to implement the [DCSA Documentation Event Hub](https://app.swaggerhub.com/apis/dcsaorg/DOCUMENTATION_EVENT_HUB) in order to use the push model. Here events are pushed as they occur.  For a changelog please click [here](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/bkg/v2#v200B1). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments. 
 *
 * OpenAPI spec version: 2.0.0-Beta-1
 * Contact: info@dcsa.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AirExchangeSetpoint } from './airExchangeSetpoint';
import { AirExchangeUnit } from './airExchangeUnit';
import { Co2Setpoint } from './co2Setpoint';
import { HumiditySetpoint } from './humiditySetpoint';
import { IsBulbMode } from './isBulbMode';
import { IsColdTreatmentRequired } from './isColdTreatmentRequired';
import { IsDrainholesOpen } from './isDrainholesOpen';
import { IsHighValueCargo } from './isHighValueCargo';
import { IsPreCoolingRequired } from './isPreCoolingRequired';
import { IsVentilationOpen } from './isVentilationOpen';
import { NitrogenSetpoint } from './nitrogenSetpoint';
import { O2Setpoint } from './o2Setpoint';
import { TemperatureSetpoint } from './temperatureSetpoint';
import { TemperatureUnit } from './temperatureUnit';

/**
 * The specifications for a Reefer equipment. If this object is provided then the equipment linked to this Reefer object should be concidered an **Operated Reefer**.  If not provided the equipment should be concidered a **Non Operated Reefer** in case the `ISOEquipmentCode` indicates a reefer container. 
 */
export interface ActiveReeferSettings { 
    isPreCoolingRequired?: IsPreCoolingRequired;
    isColdTreatmentRequired?: IsColdTreatmentRequired;
    isVentilationOpen?: IsVentilationOpen;
    isDrainholesOpen?: IsDrainholesOpen;
    isBulbMode?: IsBulbMode;
    isHighValueCargo?: IsHighValueCargo;
    temperatureSetpoint: TemperatureSetpoint;
    temperatureUnit: TemperatureUnit;
    o2Setpoint?: O2Setpoint;
    co2Setpoint?: Co2Setpoint;
    nitrogenSetpoint?: NitrogenSetpoint;
    humiditySetpoint?: HumiditySetpoint;
    airExchangeSetpoint?: AirExchangeSetpoint;
    airExchangeUnit?: AirExchangeUnit;
}