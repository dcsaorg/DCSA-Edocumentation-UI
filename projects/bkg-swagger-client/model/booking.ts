/**
 * DCSA OpenAPI specification for Booking v2 - Beta 1
 * API specification issued by DCSA.org.  For explanation to specific values or objects please refer to the *** [Information Model v2022.1]() *** Will be updated soon ***. This API does not define the business rules regarding what is allowed to update at what time. For this the [BKG IFS]() *** Will be updated soon *** should be consulted.  All other documents related to the Booking publication can be found [here](https://knowledge.dcsa.org/s/publication?publicationId=a0r7T000000L8mmQAC)  It is possible to use this API as a standalone API. In order to do so it is necessary to use the poll-endPoint - /v2/events  in order to poll event information.  It is recomended to implement the [DCSA Documentation Event Hub](https://app.swaggerhub.com/apis/dcsaorg/DOCUMENTATION_EVENT_HUB) in order to use the push model. Here events are pushed as they occur.  For a changelog please click [here](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/bkg/v2#v200B1). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments. 
 *
 * The version of the OpenAPI document: 2.0.0-Beta-1
 * Contact: info@dcsa.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ValueAddedService } from './valueAddedService';
import { ReceiptTypeAtOrigin } from './receiptTypeAtOrigin';
import { Reference } from './reference';
import { PaymentTermCode } from './paymentTermCode';
import { DeliveryTypeAtDestination } from './deliveryTypeAtDestination';
import { DocumentParty } from './documentParty';
import { CommunicationChannelCode } from './communicationChannelCode';
import { IncoTerms } from './incoTerms';
import { TransportDocumentTypeCode } from './transportDocumentTypeCode';
import { Commodity } from './commodity';
import { CargoMovementTypeAtDestination } from './cargoMovementTypeAtDestination';
import { ModeOfTransport } from './modeOfTransport';
import { CargoMovementTypeAtOrigin } from './cargoMovementTypeAtOrigin';
import { ShipmentLocation } from './shipmentLocation';


/**
 * includes the information requested in a booking, service terms and types as well as the assigned booking reference by the carrier. 
 */
export interface Booking { 
    /**
     * A reference to the booking during the booking request phase 
     */
    carrierBookingRequestReference: string;
    receiptTypeAtOrigin: ReceiptTypeAtOrigin;
    deliveryTypeAtDestination: DeliveryTypeAtDestination;
    cargoMovementTypeAtOrigin: CargoMovementTypeAtOrigin;
    cargoMovementTypeAtDestination: CargoMovementTypeAtDestination;
    /**
     * Reference number for agreement between shipper and carrier through which the shipper commits to provide a certain minimum quantity of cargo over a fixed period, and the carrier commits to a certain rate or rate schedule.
     */
    serviceContractReference?: string;
    /**
     * The name of the Vessel given by the Vessel Operator and registered with IMO. 
     */
    vesselName?: string;
    /**
     * The name of a service as specified by the carrier 
     */
    carrierServiceName?: string;
    /**
     * The Carrier specific code of the service for which the schedule details are published. 
     */
    carrierServiceCode?: string;
    /**
     * A global unique service reference, as per DCSA standard, agreed by VSA partners for the service. The service reference must match the regular expression pattern: `SR\\d{5}[A-Z]`. The letters `SR` followed by `5 digits`, followed by a checksum-character as a capital letter from `A to Z`. 
     */
    universalServiceReference?: string;
    /**
     * The identifier of an export voyage. The vessel operator-specific identifier of the export Voyage. 
     */
    carrierExportVoyageNumber?: string;
    /**
     * A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage. The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]` - `2 digits` for the year - `2 alphanumeric characters` for the sequence number of the voyage - `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh). 
     */
    universalExportVoyageReference?: string;
    /**
     * The value of the cargo that the shipper declares to avoid the carrier&apos;s limitation of liability and \"Ad Valorem\" freight, i.e. freight which is calculated based on the value of the goods declared by the shipper.
     */
    declaredValue?: number;
    /**
     * The currency used for the declared value, using the 3-character code defined by ISO 4217.
     */
    declaredValueCurrency?: string;
    paymentTermCode?: PaymentTermCode;
    /**
     * Indication whether the shipper agrees to load part of the shipment in case where not all of the cargo is delivered within cut-off. 
     */
    isPartialLoadAllowed: boolean;
    /**
     * Information provided by the shipper whether an export declaration is required for this particular shipment/commodity/destination. 
     */
    isExportDeclarationRequired: boolean;
    /**
     * A government document permitting designated goods to be shipped out of the country.  Reference number assigned by an issuing authority to an Export License. The export license must be valid at time of departure. Required if Export declaration required is ‘True’. 
     */
    exportDeclarationReference?: string;
    /**
     * Information provided by the shipper whether an import permit or license is required for this particular shipment/commodity/destination. 
     */
    isImportLicenseRequired: boolean;
    /**
     * A certificate, issued by countries exercising import controls, that permits importation of the articles stated in the license. Reference number assigned by an issuing authority to an Import License. The import license number must be valid at time of arrival. Required if import license required is ‘True’. 
     */
    importLicenseReference?: string;
    /**
     * 
     */
    customsFilingSystems?: Array<string>;
    /**
     * Indicates whether the shipper will submit the destination customs filing directly. If `false` the shipper requests the carrier to submit the customs filing on their behalf. Mandatory if AMS/ACI filing is required 
     */
    isCustomsFilingSubmissionByShipper?: boolean;
    /**
     * Information provided by the shipper to identify whether pricing for the shipment has been agreed via a contract or a quotation reference. Mandatory if service contract (owner) is not provided. 
     */
    contractQuotationReference?: string;
    /**
     * The date when the shipment is expected to be loaded on board a vessel as provided by the shipper or its agent. If vessel/voyage or expected date of arrival is not provided, this is mandatory 
     */
    expectedDepartureDate?: string;
    /**
     * The start date (provided as a range together with `expectedArrivalAtPlaceOfDeliveryEndDate`) for when the shipment is expected to arrive at final destination. If vessel/voyage or `expectedDepartureDate` is not provided, this is mandatory together with `expectedArrivalAtPlaceOfDeliveryEndDate` 
     */
    expectedArrivalAtPlaceOfDeliveryStartDate?: string;
    /**
     * The end date (provided as a range together with `expectedArrivalAtPlaceOfDeliveryStartDate`) for when the shipment is expected to arrive at final destination. If vessel/voyage or `expectedDepartureDate` is not provided, this is mandatory together with `expectedArrivalAtPlaceOfDeliveryStartDate` 
     */
    expectedArrivalAtPlaceOfDeliveryEndDate?: string;
    transportDocumentTypeCode?: TransportDocumentTypeCode;
    /**
     * A reference for a `TransportDocument` already provided by the shipping line to the Shipper. This field is to be used for prerequired transportDocumentReferences. 
     */
    transportDocumentReference?: any | null;
    /**
     * Identification number provided by the platform/channel used for booking request/confirmation, ex: Inttra booking reference, or GTNexus, other. Conditional on booking channel being used 
     */
    bookingChannelReference?: string;
    incoTerms?: IncoTerms;
    communicationChannelCode: CommunicationChannelCode;
    /**
     * Indicates if an alternate equipment type can be provided by the carrier. 
     */
    isEquipmentSubstitutionAllowed: boolean;
    /**
     * The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel 
     */
    vesselIMONumber?: string;
    preCarriageModeOfTransportCode?: ModeOfTransport;
    /**
     * General purpose object to capture `Invoice Payable At` location. The location can be specified in **any** of the following ways: `UN Location Code` and/or an `Address`. 
     */
    invoicePayableAt?: any | null;
    /**
     * General purpose object to capture `Place of B/L Issue` location. The location can be specified in **any** of the following ways: `UN Location Code` and/or an `Address`.  The location where the original transport document (`Bill of Lading`) will be issued. 
     */
    placeOfBLIssue?: any | null;
    commodities: Array<Commodity>;
    valueAddedServices?: Array<ValueAddedService>;
    references?: Array<Reference>;
    documentParties?: Array<DocumentParty>;
    shipmentLocations?: Array<ShipmentLocation>;
}

